[tox]
minversion = 3.1
envlist = pep8,py37,py36,py35,py27
skipsdist = true
ignore_basepython_conflict = true

[testenv]
usedevelop = True
#install_command = /usr/local/bin/pip3 install {opts} {packages}
passenv = OS_* OPENSTACKSDK_*
basepython = {env:OPENSTACKSDK_TOX_PYTHON:python3}
setenv =
    VIRTUAL_ENV={envdir}
    LANG=en_US.UTF-8
    LANGUAGE=en_US:en
    LC_ALL=C
    OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:true}
    OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:true}
    OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:true}
deps = -r{toxinidir}/test-requirements.txt
       -r{toxinidir}/requirements.txt
commands = stestr run {posargs}
           stestr slowest

[testenv:functional]
# Some jobs (especially heat) takes longer, therefore increase default timeout
# This timeout should not be smaller, than the longest individual timeout
setenv =
    {[testenv]setenv}
    OS_CLOUD=profi
    OS_TEST_TIMEOUT=600
    OPENSTACKSDK_DEMO_CLOUD=profi
    OPENSTACKSDK_OPERATOR_CLOUD=profi
    PBR_VERSION=0.8.0    # only use as long as no git versioning is available
    OPENSTACKSDK_FUNC_TEST_TIMEOUT_LOAD_BALANCER=600
    OPENSTACKSDK_TESTS_SUBDIR="nat"
commands = stestr --test-path ./opentelekom/tests/functional/{env:OPENSTACKSDK_TESTS_SUBDIR:} run --serial {posargs}
           stestr slowest

[testenv:functional_debug]
setenv =
    {[testenv]setenv}
    OS_CLOUD=profi
    OS_TEST_TIMEOUT=6000
    OPENSTACKSDK_DEMO_CLOUD=profi
    OPENSTACKSDK_OPERATOR_CLOUD=profi
    PBR_VERSION=0.8.0
    OPENSTACKSDK_FUNC_TEST_TIMEOUT_LOAD_BALANCER=600
    OS_LOG_CAPTURE={env:OS_LOG_CAPTURE:false}
    OS_STDOUT_CAPTURE={env:OS_STDOUT_CAPTURE:false}
    OS_STDERR_CAPTURE={env:OS_STDERR_CAPTURE:false}
    #OPENSTACKSDK_TESTS_SUBDIR=*
    #OPENSTACKSDK_TESTS_SUBDIR="dms"
commands = oslo_debug_helper -t opentelekom/tests functional.nat.v2.test_nat -s {posargs}

[testenv:ansible]
# Need to pass some env vars for the Ansible playbooks
basepython = {env:OPENSTACKSDK_TOX_PYTHON:python2}
passenv = HOME USER ANSIBLE_VAR_*
deps =
    {[testenv]deps}
    ansible
commands = {toxinidir}/extras/run-ansible-tests.sh -e {envdir} {posargs}

